{
  "articles": [
    {
      "path": "atelier1.html",
      "title": "atelier 1",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nObjectifs\nApr√®s cet atelier vous saurez :\ncomprendre ce qu‚Äôest un package\ncomprendre la structure d‚Äôun package\ncr√©er votre premier package\nsupports\ndiaporama version html ou version pdf\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:17+00:00"
    },
    {
      "path": "atelier2.html",
      "title": "atelier 2",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nObjectifs\nApr√®s cet atelier vous saurez rajouter une fonction dans un package. C‚Äôest √† dire que vous aurez compris :\nce qu‚Äôest une fonction\ncomment rajouter une fonction dans un package\ncomment documenter une fonction\ncomment tester une fonction\nsupports\ndiaporama version html ou version pdf\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:17+00:00"
    },
    {
      "path": "atelier3.html",
      "title": "atelier 3 - Ajouter des datasets",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nObjectifs\nApr√®s cet atelier vous saurez rajouter des jeux de donn√©es dans votre package.\nsupports\ndiaporama version html ou version pdf\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:18+00:00"
    },
    {
      "path": "atelier4.html",
      "title": "atelier 4 - Ajouter des vignettes et un site de documentation",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nObjectifs\nApr√®s cet atelier vous saurez rajouter des vignettes et un site de documentation √† votre package.\nsupports\ndiaporama version html ou version pdf\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:19+00:00"
    },
    {
      "path": "atelier5.html",
      "title": "atelier 5 - Ajouter des templates Rmarkdown √† votre package",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nObjectifs\nApr√®s cet atelier vous saurez rajouter des templates Rmarkdown √† votre package.\nsupports\ndiaporama version html ou version pdf\n\n\n\nfitvids('.shareagain', {players: 'iframe'});\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:19+00:00"
    },
    {
      "path": "configuration.html",
      "title": "Avant de commencer",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nAvant de pouvoir cr√©er un package en R, vous allez devoir configurer votre poste de travail pour installer et param√©trer les diff√©rents outils n√©cessaires √† la cr√©ation de packages.\ninstaller les packages n√©cessaires √† l‚Äôatelier.\nNous aurons besoins des packages suivants pour cet atelier :\n\n\ninstall.packages(c('devtools','usethis','roxygen2','testthat', 'pkgdown'))\n\n\n\nConfiguration du proxy\nEtape √† r√©aliser quand vous √™tes derri√®re un proxy.\nOuvrir Rstudio et naviguez dans Tools -> Global Options / Packages : cliquez sur Use Internet Explorer library/proxy for HTTP.\nCr√©er un fichier texte appel√© .Renviron √† mettre dans le r√©pertoire de travail par d√©faut de Rstudio, avec les informations ci-dessous. Pour se faire vous pouvez utiliser la commande usethis::edit_r_environ() apr√®s avoir install√© le package {usethis} via install.packages(\"usethis\")\n\n\noptions(internet.info = 0)\n\nhttp_proxy=URL_DU_PROXY\n\nhttps_proxy=URL_DU_PROXY\n\n\n\n\nLe fichier .Renviron est un fichier √©ditable qui permet de cr√©er des variables d‚Äôenvironnement. Ces variables sont utiles par exemple pour d√©finir comme ici un proxy, ou des clefs d‚ÄôAPI. Chaque clefs d√©finies dans le .Renviron peuvent ensuite s‚Äôappeler en utilisant Sys.getenv(\"NOM_DE_LA_CLEF\"). Ici par exemple Sys.getenv(\"http_proxy\") renvoi l‚Äôurl du proxy. Le fichier .Renviron* peut √™tre d√©fini au niveau du r√©pertoire par d√©faut de travail ou pour un projet particulier. Dans ce cas, seul le .Renviron du projet s‚Äôapplique.\nConfiguration de GIT\nT√©l√©charger git\nT√©l√©charger et installer GIT.\nD√©clarer git dans Rstudio\nOn active le contr√¥le de version pour les projets R dans les options globales du menu Tools de RStudio :\n\ns‚Äôidentifier\nPour cela, utiliser le terminal dans Rstudio et d√©clarez votre nom et email.\ngit config --global user.name \"Jean Claude Dusse\"\ngit config --global user.email jcdusse@pays_merveilleux.fr\nD√©clarer le proxy dans GIT\nDans le terminal de Rstudio, taper les lignes de commande suivante\ngit config --global http.proxy URL_DU_PROXY\ngit config --global https.proxy URL_DU_PROXY`\nEn DREAL PdL, l‚Äôurl du proxy est ‚Äòhttp://pfrie-std.proxy.e2.rie.gouv.fr:8080‚Äô, √ßa nous donne :\ngit config --global http.proxy pfrie-std.proxy.e2.rie.gouv.fr:8080\ngit config --global https.proxy pfrie-std.proxy.e2.rie.gouv.fr:8080\nD√©clarer un outil de gestion de conflit\nT√©l√©charger et installer Winmerge\nWinmerge est un outil graphique utile pour g√©rer la r√©solution des conflits de fusion dans GIT.\ngit config --global merge.tool winmerge\ngit config --global mergetool.prompt false\ngit config --global mergetool.winmerge.trustExitCode true\ngit config --global mergetool.winmerge.cmd \"\\\"C:\\Program Files\\WinMerge\\WinMergeU.exe\\\" -e -u -dl \\\"Mine\\\" -wr -dr \\\"Theirs\\\" \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$MERGED\\\"\"\nPour √©viter de taper sans cesse son mot de passe, on peut aussi demander √† git de le m√©moriser :\ngit config --global credential.helper store\nPour retrouver les options de git d√©clar√©es, vous pouvez taper git config --list dans le terminal.\nCr√©er un compte github et/ou gitlab\nSur github, cliquer sur ce lien.\nSur gitlab, cliquer sur ce lien.\nOu tout autre forge que vous souhaitez utiliser.\nPensez √† prendre le m√™me mail pour votre compte que celui que vous avez d√©fini pour GIT.\nCr√©er token github\nSi vous voulez utiliser github, cr√©er un token github, qui vous permettra de faciliter l‚Äôutilisation de {usethis}.\n\n\nusethis::create_github_token()\n\n\n\nUne page web de configuration de votre compte github s‚Äôouvre pour que vous puissiez y g√©n√©rer le token d‚Äôacc√®s personnel √† Github (en anglais PAT, pour personal access token).\nNe pas toucher aux choix par d√©faut et y g√©n√©rer le token en cliquant sur le bouton vert en bas ‚ÄòGenerate token‚Äô.\nCe token personnel d‚Äôacc√®s √† Github est utile pour installer des packages depuis Github, avec la fonction remotes::install_github(). Sans le token, l‚Äôutilisateur est soumis √† des limitations de t√©l√©chargement.\nPour cela il faut le d√©clarer √† Rstudio dans le .Renviron en cr√©ant une nouvelle variable : GITHUB_PAT=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.\nSi vous souhaitez contribuer √† des projets h√©berg√©s sur la forge github, il vous faudra √©galement d√©clarer ce token √† git. Pour cela, lancer gitcreds::gitcreds_set() depuis RStudio. A la question Enter new password or token: repondre en indiquant GITHUB_PAT=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.\nConfigurer ssh\nSur ce m√™me √©cran, Rstudio vous permet de g√©n√©rer simplement la paire de cl√©s d‚Äôauthentification SSH via le bouton Create RSA key.\n\nLe SSH est un protocole de communication s√©curis√© qui utilise la cryptographie asym√©trique.\nIl faut ensuite d√©clarer la cl√© publique dans son profil github ou gitlab pour √™tre reconnu par le serveur automatiquement lorsqu‚Äôon lui envoie des modifications.\nSous Windows, vous trouverez votre clef publique sous C:\\Users\\VOTRENOM\\.ssh.\nSous gitlab, vous devrez la d√©clarer √† l‚Äôadresse https://gitlab.com/-/profile/keys\n\n\n\nSous github, vous devrez la d√©clarer √† l‚Äôadresse https://github.com/settings/ssh/new\n\n\n\nLa cl√© SSH permet de s‚Äôidentifier de mani√®re s√ªre et pratique mais, en raison de notre proxy, une manipulation suppl√©mentaire est n√©cessaire pour que le protocole ssh fonctionne depuis un PC reli√© au r√©seau du minist√®re vers les forges web github.com et gitlab.com.\nTrouver et r√©cup√©rer le chemin vers le fichier connect.exe de votre r√©pertoire d‚Äôinstallation de git, par exempleC:/Program Files (x86)/Git/mingw64/bin/connect.exe ou C:/Program Files/Git/mingw64/bin/connect.exe.\nOuvrir le bloc note et y inscrire l‚Äôunique ligne de commandeProxyCommand \"/c/Program Files (x86)/Git/mingw64/bin/connect.exe\" -H pfrie-std.proxy.e2.rie.gouv.fr:8080 %h %p en adaptant √©ventuellement le chemin vers connect.exe √† votre propre r√©pertoire d‚Äôinstallation de git.\nEnregistrer ce fichier sous le nom ‚Äòconfig‚Äô, sans l‚Äôextension .txt, dans le r√©pertoire .ssh mentionn√© plus haut C:\\Users\\VOTRENOM\\.ssh.\nLa configuration de l‚Äôidentification par cl√© SSH est termin√©e ! üéâ\nConfigurer {usethis}\nVous pouvez √©diter votre fichier .Rprofile pour ajouter des informations par d√©faut qui seront exploit√©es par {usethis} lors de la cr√©ation de package.\nPour √©diter votre .Rprofile :\n\n\nusethis::edit_r_profile()\n\n\n\n\nLe fichier .Rprofile est un fichier √©ditable qui permet de d√©finir des options. Plus globalement, tout ce qui est dans un fichier .Rprofile est du code qui sera lanc√© √† chaque ouverture de session. Il peut √™tre utilis√© au niveau du r√©pertoire par d√©faut de travail ou pour un projet particulier. Dans ce cas, seul le .Rprofile du projet s‚Äôapplique.\nVous pouvez ensuite rajouter ces informations :\n\n\noptions(\n  usethis.full_name = \"Jean Claude Dusse\",\n  usethis.protocol  = \"ssh\",\n  usethis.description = list(\n    \"Authors@R\" = utils::person(\n        \"Jean Claude\", \"Dusse\",\n        email = \"jcdusse@pays_merveilleux.fr\",\n        role = c(\"aut\", \"cre\"),\n        comment = c(ORCID = \"JANE'S-ORCID-ID\")\n    ),\n    Version = \"0.0.0.9000\"\n  ),\n  usethis.destdir = \"~/the/place/where/I/keep/my/R/projects\"\n)\n\n\n\nAinsi √† la cr√©ation de vos packages, vous serez automatiquement rajout√© en tant qu‚Äôauteur et cr√©ateur du package.\n\n\n\n",
      "last_modified": "2021-06-22T13:13:20+00:00"
    },
    {
      "path": "index.html",
      "title": "Cr√©er son premier package R",
      "description": "Ce site presente les supports pour un atelier sur la creation de packages\n",
      "author": [],
      "contents": "\n‚ö†Ô∏è Site en construction ‚ö†Ô∏è\nAvant de commencer\nConfigurer votre poste üî®\nD√©roul√©\nAtelier 1 : Cr√©er un package üë∂\nAtelier 2 : Le workflow de l‚Äôalimentation d‚Äôun package ‚ûø\nAtelier 3 : Ajouter des datasets üìÇ\nAtelier 4 : Ajouter des vignettes et un site de documentation ‚úíÔ∏è\nAtelier 5 : Ajouter des templates Rmarkdown üìÑ\nAtelier 6 : g√©rer les versions d‚Äôun package üì∞\n\n\n\n\n\n\n",
      "last_modified": "2021-06-22T13:13:21+00:00"
    }
  ],
  "collections": []
}
